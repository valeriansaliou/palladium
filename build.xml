<!--

PALLADIUM v1.4
Description: build file to use with Ant and Tomcat (5.5 is better to compile that)
Authors: Stefan Strigler, Vanaryon
Last revision: 24/10/10

-->

<project name="Palladium BOSH" default="compile" basedir=".">
	<property file="build.properties" />
	<property file="${user.home}/build.properties" />
	<property name="app.name" value="JabberHTTPBind" />
	<property name="app.path" value="/${app.name}" />
	<property name="app.version"  value="1.0" />
	<property name="build.home" value="${basedir}/build" />
	<property name="catalina.home" value="/usr/share/tomcat7" />
	<property name="dist.home" value="${basedir}/dist" />
	<property name="docs.home" value="${basedir}/docs" />
	<property name="src.home" value="${basedir}/src" />
	<property name="web.home" value="${basedir}/web" />
	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />
	
	<path id="compile.classpath">
		<pathelement location="${catalina.home}/lib" />
		
		<fileset dir="${catalina.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="all" depends="clean,compile" description="Clean build and dist directories, then compile" />
	
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
	</target>
	
	<target name="compile" depends="prepare" description="Compile Java sources">
		<mkdir dir="${build.home}/WEB-INF/classes" />
		
		<javac srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>
		
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
	</target>
	
	<target name="dist" depends="compile,javadoc" description="Create binary distribution">
		<mkdir dir="${dist.home}/docs" />
		<copy todir="${dist.home}/docs">
			<fileset dir="${docs.home}" />
		</copy>
		
		<jar jarfile="http-bind.war" basedir="${build.home}" />
		
		<mkdir dir="${dist.home}/src" />
		
		<copy todir="${dist.home}/src">
			<fileset dir="${src.home}" />
		</copy>
		
		<mkdir dir="${dist.home}/web" />
		
		<copy todir="${dist.home}/web">
			<fileset dir="${web.home}" />
		</copy>
		
		<copy todir="${dist.home}">
			<fileset file="${basedir}/build.xml" />
		</copy>
		
		<copy todir="${dist.home}">
			<fileset file="${basedir}/build.properties" />
		</copy>
	</target>
	
	<target name="srcdist" depends="clean,dist" description="Create source distribution">
		<zip destfile="${basedir}/${app.name}-${app.version}.zip">
			<zipfileset dir="${dist.home}" prefix="${app.name}-${app.version}/" />
		</zip>
	</target>
	
	<target name="install" depends="compile" description="Install application to servlet container">
		<deploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" localWar="file://${build.home}" />
	</target>
	
	<target name="javadoc" depends="compile" description="Create Javadoc API documentation">
		<mkdir dir="${docs.home}/api" />
		<javadoc sourcepath="${src.home}" destdir="${docs.home}/api" packagenames="*">
			<classpath refid="compile.classpath" />
		</javadoc>
	</target>
	
	<target name="list" description="List installed applications on servlet container">
		<list url="${manager.url}" username="${manager.username}" password="${manager.password}" />
	</target>
	
	<target name="prepare">
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.home}/WEB-INF" />
		<mkdir dir="${build.home}/WEB-INF/classes" />
		
		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>
		
		<mkdir dir="${build.home}/WEB-INF/lib" />
	</target>
	
	<target name="reload" depends="compile" description="Reload application on servlet container">
		<reload url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />
	</target>
	
	<target name="remove" description="Remove application on servlet container">
		<undeploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />
	</target>
</project>
